{"version":3,"sources":["helpers/Validators/index.ts","helpers/Validators/required.ts","components/UI/Input/Input.module.scss","components/Navigation/Navigation.tsx","components/Header/Header.tsx","components/UI/Card/Card.tsx","components/UI/Input/Input.tsx","components/UI/Button/Button.tsx","helpers/Parsable.ts","helpers/TypeHelper.ts","helpers/decorators/class-transformer/Type.ts","entities/Project.ts","store/actions/projects.ts","services/ProjectService.ts","helpers/FormControl.ts","routes/ProjectListing/Form/ProjectForm.tsx","components/ProjectItem/ProjectItem.tsx","routes/ProjectListing/List/ProjectList.tsx","components/Footer/Footer.tsx","App.tsx","serviceWorker.ts","store/store.ts","store/reducers/projects.ts","index.tsx"],"names":["_Validator__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","o","d","__webpack_exports__","_required__WEBPACK_IMPORTED_MODULE_1__","required","value","trim","module","exports","TextArea","linkClass","withRouter","react_default","a","createElement","className","NavLink","activeClassName","exact","to","Header","_ref","children","Card","Input","input","label","type","valid","touched","props","Object","objectWithoutProperties","style","push","assign","join","styles","Button","btnType","small","clear","buttonClass","Parsable","classCallCheck","this","createClass","key","obj","plainToClass","TypeHelper","item","padrao","arguments","length","undefined","object","semAcento","ret","toString","replace","_Date","Date","_x","apply","moment","toDate","isNaN","getFullYear","parseFloat","res","JSON","parse","e","Array","isArray","_len","args","_key","reduce","n","itemNumber","split","letter","charCodeAt","parseInt","Type","typeFunction","Original","target","Reflect","getMetadata","Number","Transform","data","number","String","string","Boolean","boolean","array","ActionTypeEnum","Project","_dec","_dec2","_dec3","_dec4","_dec5","_class","_Parsable","_getPrototypeOf2","_this","possibleConstructorReturn","getPrototypeOf","call","concat","initializerDefineProperty","_descriptor","assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","_descriptor5","inherits","applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","now","add","project","PROJECT_ADD","STORAGE_KEY","list","items","localStorage","getItem","FormControl","create","name","validators","inputType","validate","disabled","map","filter","validation","toProps","control","ProjectForm","_Component","state","isFormValid","isEdit","formControls","V","handleInputChange","event","find","index","indexOf","controls","toConsumableArray","objectSpread","some","setState","handleSubmit","preventDefault","save","title","description","history","_this2","location","search","query","URLSearchParams","id","get","unsubscribe","listen","_this3","UI_Card_Card","onSubmit","UI_Input_Input","onChange","UI_Button_Button","Component","connect","dispatch","isNew","projects","findIndex","json","stringify","setItem","saved","PROJECT_EDIT","edit","remove","projectId","splice","service","PROJECT_REMOVE","onClick","components_ProjectItem_ProjectItem","Footer","App","components_Header_Header","components_Navigation_Navigation","Switch","Route","path","component","ProjectList","Redirect","components_Footer_Footer","forEach","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createStore","combineReducers","action","newState","app","es","store","HashRouter","src_App","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.802352d0.chunk.js","sourcesContent":["export * from './Validator'\nexport * from './required'\n","import { Validator } from \"./Validator\";\n\nexport const required: Validator = value => !value.trim() ? { required: true } : null\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextArea\":\"Input_TextArea__3yPmy\"};","import React, { JSXElementConstructor } from 'react'\nimport { withRouter, RouteComponentProps, NavLink } from 'react-router-dom';\n\nconst linkClass = \"dib f5 ph2 mh2 no-underline blue\"\n\nconst Navigation: JSXElementConstructor<RouteComponentProps> = () =>\n\t<nav className=\"tc mb3\">\n\t\t<NavLink className={linkClass} activeClassName='b' exact to=\"/project\">\n\t\t\tList\n\t\t</NavLink>\n\t\t<NavLink className={linkClass} activeClassName='b' exact to=\"/project/create\">\n\t\t\tCreate\n\t\t</NavLink>\n\t</nav>\n\nexport default withRouter(Navigation)\n","import React, { JSXElementConstructor, Props } from 'react'\n\nconst Header: JSXElementConstructor<Props<any>> = ({\n\tchildren,\n}) =>\n\t<header>\n\t\t<h1 className=\"f1 lh-title tc\">Project List</h1>\n\t\t{children}\n\t</header>\n\nexport default Header\n","import React, { JSXElementConstructor, Props } from 'react'\n\nconst Card: JSXElementConstructor<Props<any>> = ({\n\tchildren,\n}) =>\n\t<div className=\"pa3 br2 shadow-4\">\n\t\t{children}\n\t</div>\n\nexport default Card\n","/* React imports */\nimport React, { JSXElementConstructor, HTMLProps, ChangeEvent } from 'react'\n\nimport styles from './Input.module.scss'\n\n/* Typing */\ntype Props = HTMLProps<HTMLInputElement> & HTMLProps<HTMLTextAreaElement> & {\n\ttype: string\n\tlabel: string\n\tvalid: boolean\n\ttouched: boolean\n}\n\nconst Input: JSXElementConstructor<Props> = ({\n\tclassName,\n\tlabel,\n\ttype,\n\tvalid,\n\ttouched,\n\t...props\n}) => {\n\tlet style = ['db w-100 br2 pa3 ba b--silver']\n\tlet input\n\n\tif (className)\n\t\tstyle.push(className)\n\n\tif (touched)\n\t\tif (valid)\n\t\t\tstyle.push('b--green')\n\t\telse\n\t\t\tstyle.push('b--red')\n\n\tswitch (type) {\n\t\tcase 'textarea':\n\t\t\tinput = <textarea className={style.join(' ') + ' ' + styles.TextArea} {...props}></textarea>\n\t\t\tbreak\n\t\tdefault:\n\t\t\tinput = <input className={style.join(' ')} type={type} {...props} />\n\t}\n\n\treturn (\n\t\t<label className=\"db mb4\">\n\t\t\t<p className=\"b mb3\">{label}</p>\n\t\t\t{input}\n\t\t</label>\n\t)\n}\n\nexport default Input\n","/* React imports */\nimport React, { HTMLProps, JSXElementConstructor } from 'react'\n\n/* Typing */\ntype Props = HTMLProps<HTMLButtonElement> & {\n\tbtnType: 'success' | 'danger'\n\tsmall?: boolean\n\tclear?: boolean\n}\n\nconst Button: JSXElementConstructor<Props> = ({\n\tbtnType,\n\tsmall,\n\tclear,\n\tchildren,\n\tclassName,\n\t...props\n}) => {\n\tconst buttonClass = ['db w-100 ttu bn b tc pointer dim']\n\n\tif (className)\n\t\tbuttonClass.push(className)\n\n\tbuttonClass.push(small ? 'ph1 pv2 f6' : 'ph2 pv3 f5')\n\n\tswitch (btnType) {\n\t\tcase 'success':\n\t\t\tbuttonClass.push(clear ? 'bg-transparent green' : 'bg-green white')\n\t\t\tbreak\n\t\tcase 'danger':\n\t\t\tbuttonClass.push(clear ? 'bg-transparent red' : 'bg-red white')\n\t\t\tbreak\n\t}\n\n\treturn (\n\t\t<button className={buttonClass.join(' ')} {...props}>\n\t\t\t{children}\n\t\t</button>\n\t)\n}\n\nexport default Button\n","import 'reflect-metadata';\nimport { plainToClass } from \"class-transformer\";\n\nexport abstract class Parsable {\n\tstatic parse<T>(this: Constructor<T>, obj?: ObjectKeys<T>): T;\n\tstatic parse<T>(this: Constructor<T>, obj?: ObjectKeys<T>[]): T[];\n\tstatic parse<T>(this: Constructor<T>, obj?: ObjectKeys<T> | ObjectKeys<T>[]): (T | T[]) {\n\t\treturn plainToClass(this, obj || {}) as (T | T[])\n\t}\n}\n\ntype ObjectKeys<T> = {\n\t[P in keyof T]?: T[P]\n}\n\ntype Constructor<T> = new () => T\n","import moment from 'moment'\n\nexport class TypeHelper {\n\n\tstatic object(item: any, padrao: any = {}): any {\n\t\treturn typeof item == \"object\" ? item : padrao\n\t}\n\n\tstatic any(item: any, padrao: any = {}): any {\n\t\treturn TypeHelper.object(item, padrao)\n\t}\n\n\tstatic string(item: any, padrao: string = '', semAcento = false): string {\n\t\tlet ret = (item || padrao).toString()\n\t\tif (semAcento) {\n\t\t\tret = ret.replace(/[àáâãä]/g, 'a')\n\t\t\t\t.replace(/[éèêë]/g, 'e')\n\t\t\t\t.replace(/[íìîï]/g, 'i')\n\t\t\t\t.replace(/[õóòõö]/g, 'o')\n\t\t\t\t.replace(/[úùü]/g, 'u')\n\t\t\t\t.replace(/[ç]/g, 'c')\n\t\t\t\t.replace(/[ñ]/g, 'n')\n\t\t}\n\t\treturn ret\n\t}\n\n\tstatic Date(item: any, padrao: Date = new Date(0)): Date {\n\t\tif (typeof item == 'string') {\n\t\t\titem = item.length <= 11 ? item.trim() + ' 12:00:00' : item\n\t\t}\n\n\t\tconst d = moment(item).toDate()\n\t\treturn isNaN(d.getFullYear()) ? padrao : d\n\t}\n\n\tstatic number(item: any, padrao: number = 0): number {\n\t\treturn (parseFloat(item) || padrao)\n\t}\n\n\tstatic boolean(item: any, padrao: boolean = false): boolean {\n\t\tif (typeof item == 'boolean') return item\n\n\t\ttry {\n\t\t\tconst res = JSON.parse(item)\n\t\t\tif (typeof res == 'number') return res > 0\n\t\t\tif (typeof res != 'boolean') return padrao\n\t\t\treturn res\n\t\t} catch (e) {\n\t\t\treturn padrao\n\t\t}\n\t}\n\n\tstatic array(item: any, padrao: any = []): any[] {\n\t\treturn Array.isArray(item) ? item : padrao\n\t}\n\n\tstatic encode(...args: (number | string)[]): number {\n\t\treturn <number>args.reduce((n, item) => {\n\t\t\tconst itemNumber: number = typeof item == 'string' ?\n\t\t\t\titem.split('').reduce((n, letter) => n + letter.charCodeAt(0), 0) :\n\t\t\t\titem;\n\t\t\treturn parseInt(n.toString() + itemNumber.toString())\n\t\t}, '')\n\t}\n}\n","import { Type as Original, plainToClass, Transform, TypeHelpOptions } from \"class-transformer\";\nimport 'reflect-metadata'\nimport { TypeHelper } from \"../../TypeHelper\";\n\nexport function Type(typeFunction?: (type?: TypeHelpOptions | undefined) => Function) {\n\tif (typeFunction) return Original.apply(null, [typeFunction])\n\n\treturn function (target: any, key: string) {\n\t\tconst type = Reflect.getMetadata('design:type', target, key)\n\t\tswitch (type) {\n\t\t\tcase Number:\n\t\t\t\treturn Transform(data => TypeHelper.number(data))(target, key)\n\t\t\tcase String:\n\t\t\t\treturn Transform(data => TypeHelper.string(data))(target, key)\n\t\t\tcase Date:\n\t\t\t\treturn Transform(data => TypeHelper.Date(data))(target, key)\n\t\t\tcase Boolean:\n\t\t\t\treturn Transform(data => TypeHelper.boolean(data))(target, key)\n\t\t\tcase Array:\n\t\t\t\treturn Transform(data => TypeHelper.array(data))(target, key)\n\t\t\tdefault:\n\t\t\t\treturn Transform(data => plainToClass(type, data))(target, key)\n\t\t}\n\t}\n}\n","import { Parsable } from \"../helpers/Parsable\";\nimport { Type } from \"../helpers/decorators/class-transformer/Type\";\n\nexport class Project extends Parsable {\n\n\t@Type()\n\tid: number = Date.now()\n\n\t@Type()\n\ttitle: string = ''\n\n\t@Type()\n\tdescription: string = ''\n\n\t@Type()\n\tmodified: Date = new Date()\n\n\t@Type()\n\tcreated: Date = new Date()\n}\n","import { Project } from \"../../entities/Project\";\n\nexport function add(project: Project): ProjectAction {\n\treturn {\n\t\ttype: ActionTypeEnum.PROJECT_ADD,\n\t\tproject,\n\t}\n}\n\nexport function edit(project: Project): ProjectAction {\n\treturn {\n\t\ttype: ActionTypeEnum.PROJECT_EDIT,\n\t\tproject,\n\t}\n}\n\nexport function remove(projectId: Project['id']): ProjectAction {\n\treturn {\n\t\ttype: ActionTypeEnum.PROJECT_REMOVE,\n\t\tprojectId,\n\t}\n}\n\nexport type ProjectAction = {\n\ttype: ActionTypeEnum.PROJECT_ADD\n\tproject: Project\n} | {\n\ttype: ActionTypeEnum.PROJECT_EDIT\n\tproject: Project\n} | {\n\ttype: ActionTypeEnum.PROJECT_REMOVE\n\tprojectId: Project['id']\n}\n\nexport enum ActionTypeEnum {\n\tPROJECT_ADD = 'PROJECT_ADD',\n\tPROJECT_EDIT = 'PROJECT_EDIT',\n\tPROJECT_REMOVE = 'PROJECT_REMOVE',\n}\n","import { Project } from \"../entities/Project\";\n\nconst STORAGE_KEY = 'project_list'\n\nexport function list(): Project[] {\n\tconst items: any[] = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]')\n\treturn Project.parse(items)\n}\n\nexport function remove(projectId: Project['id']): void {\n\tconst projects = list()\n\tconst index = projects.findIndex(item => item.id === projectId)\n\tprojects.splice(index, 1)\n\tconst json = JSON.stringify(projects)\n\tlocalStorage.setItem(STORAGE_KEY, json)\n}\n\nexport function save(project: Project): {\n\tsaved: boolean\n\tisNew: boolean\n} {\n\tconst projects = list()\n\n\tconst index = projects.findIndex(item => item.id == project.id)\n\tif (index > -1) projects[index] = project\n\telse projects.push(project)\n\n\tconst json = JSON.stringify(projects)\n\tlocalStorage.setItem(STORAGE_KEY, json)\n\n\treturn {\n\t\tsaved: true,\n\t\tisNew: index == -1,\n\t}\n}\n","import { Validator, Validation } from \"./Validators\";\n\nexport const FormControl = {\n\tcreate,\n\tvalidate,\n\ttoProps,\n}\n\nfunction create(name: string, label: string, validators: Validator[] = [], inputType: string = 'text'): Control {\n\treturn {\n\t\tvalue: '',\n\t\tvalid: !FormControl.validate('', validators).length,\n\t\ttouched: false,\n\t\tvalidators,\n\t\tprops: {\n\t\t\tname,\n\t\t\tlabel,\n\t\t\ttype: inputType,\n\t\t\tdisabled: false,\n\t\t}\n\t}\n}\n\nfunction validate(value: string, validators: Validator[]): Validation[] {\n\tconst errors = validators.map(validate => validate(value)).filter(validation => validation)\n\treturn errors\n}\n\nfunction toProps(control: Control) {\n\treturn {\n\t\tvalue: control.value,\n\t\tvalid: control.valid,\n\t\ttouched: control.touched,\n\t\ttype: control.props.type,\n\t\tdisabled: control.props.disabled,\n\t\tname: control.props.name,\n\t\tlabel: control.props.label,\n\t}\n}\n\nexport type Control = {\n\tvalue: string\n\tvalid: boolean\n\ttouched: boolean\n\tvalidators: Validator[]\n\tprops: {\n\t\tname: string\n\t\tlabel: string\n\t\ttype: string\n\t\tdisabled: boolean\n\t}\n}\n","/* React imports */\nimport React, { Component, ChangeEvent } from 'react'\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router';\n\n/* Components */\nimport Card from '../../../components/UI/Card/Card';\nimport Input from '../../../components/UI/Input/Input';\nimport Button from '../../../components/UI/Button/Button';\n\n/* Services */\nimport { Project } from '../../../entities/Project';\nimport { add, edit } from '../../../store/actions';\nimport { save, list } from '../../../services/ProjectService';\n\n/* Helpers */\nimport { FormControl, Control } from '../../../helpers/FormControl';\nimport * as V from '../../../helpers/Validators'\n\n/* Typing */\ntype MappedProps = { save: (project: Project) => void }\ntype Props = RouteComponentProps & MappedProps\ntype State = {\n\tisFormValid: boolean\n\tproject: Project | null\n\tisEdit: boolean\n\tformControls: Control[]\n}\n\nexport class ProjectForm extends Component<Props, State> {\n\tstate = {\n\t\tisFormValid: false,\n\t\tproject: null,\n\t\tisEdit: false,\n\t\tformControls: [\n\t\t\tFormControl.create('title', 'Project Name', [V.required]),\n\t\t\tFormControl.create('description', 'Project Description', [V.required], 'textarea'),\n\t\t]\n\t}\n\n\tcomponentWillMount() {\n\t\tif (!this.props.location.search) return\n\n\t\tconst query = new URLSearchParams(this.props.location.search)\n\t\tconst id = parseInt(query.get('id') || '')\n\t\tconst project = list().find(project => project.id === id)\n\n\t\tif (project)\n\t\t\tthis.setState({\n\t\t\t\tproject,\n\t\t\t\tisFormValid: true,\n\t\t\t\tisEdit: true,\n\t\t\t\tformControls: [\n\t\t\t\t\t{\n\t\t\t\t\t\t...this.state.formControls[0],\n\t\t\t\t\t\tvalue: project.title,\n\t\t\t\t\t\ttouched: true,\n\t\t\t\t\t\tvalid: !FormControl.validate(project.title, this.state.formControls[0].validators).length,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t...this.state.formControls[1],\n\t\t\t\t\t\tvalue: project.description,\n\t\t\t\t\t\ttouched: true,\n\t\t\t\t\t\tvalid: !FormControl.validate(project.description, this.state.formControls[1].validators).length,\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t})\n\n\t\tconst unsubscribe = this.props.history.listen(() => {\n\t\t\tthis.setState({ project: Project.parse() })\n\t\t\tunsubscribe()\n\t\t})\n\t}\n\n\thandleInputChange = (event: ChangeEvent<HTMLInputElement & HTMLTextAreaElement>) => {\n\t\tconst control = this.state.formControls.find(control => control.props.name == event.target.name) as Control\n\t\tconst index = this.state.formControls.indexOf(control)\n\t\tconst controls = [...this.state.formControls]\n\t\tcontrols[index] = {\n\t\t\t...control,\n\t\t\tvalue: event.target.value,\n\t\t\ttouched: true,\n\t\t\tvalid: !FormControl.validate(event.target.value, control.validators).length,\n\t\t}\n\n\t\tconst isFormValid = !controls.some(control => !control.valid)\n\n\t\tthis.setState({\n\t\t\tisFormValid,\n\t\t\tformControls: controls,\n\t\t})\n\t}\n\n\thandleSubmit = (event: ChangeEvent<HTMLFormElement>) => {\n\t\tevent.preventDefault()\n\n\t\tthis.props.save(Project.parse({\n\t\t\t...(this.state.project || {}),\n\t\t\ttitle: this.state.formControls[0].value,\n\t\t\tdescription: this.state.formControls[1].value,\n\t\t}))\n\t\tthis.props.history.push('/projects')\n\n\t\tthis.setState({\n\t\t\tproject: Project.parse()\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Card>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t{this.state.formControls.map(control =>\n\t\t\t\t\t\t<Input key={control.props.name} {...FormControl.toProps(control)} onChange={this.handleInputChange} />\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Button type=\"submit\" btnType=\"success\" disabled={!this.state.isFormValid}>\n\t\t\t\t\t\t{this.state.isEdit ? 'Edit' : 'Create'}\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<MappedProps, RouteComponentProps> = dispatch => ({\n\tsave: project => {\n\t\tconst { isNew } = save(project)\n\t\tif (isNew) dispatch(add(project))\n\t\telse dispatch(edit(project))\n\t}\n})\n\nexport default withRouter(connect(null, mapDispatchToProps)(ProjectForm))\n","/* React imports */\nimport React, { JSXElementConstructor, HTMLProps } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\n\n/* Components */\nimport Card from '../UI/Card/Card';\nimport Button from '../UI/Button/Button';\n\n/* Services */\nimport { remove } from '../../store/actions';\nimport * as service from '../../services/ProjectService'\n\n/* Typing */\nimport { Project } from '../../entities/Project';\ntype DispatchProps = { remove: () => void }\ntype Props = Project & RouteComponentProps & DispatchProps & {\n\tonClick?: HTMLProps<HTMLElement>['onClick']\n}\n\nconst ProjectItem: JSXElementConstructor<Props> = ({\n\tid,\n\ttitle,\n\tdescription,\n\tonClick,\n\tremove,\n\thistory,\n}) =>\n\t<div className=\"mb3\" onClick={onClick}>\n\t\t<Card>\n\t\t\t<p className=\"mb2 f5 b\">{title}</p>\n\t\t\t<p className=\"f6\">{description}</p>\n\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div className=\"w-25 mr2\">\n\t\t\t\t\t<Button clear small btnType=\"success\" onClick={() => history.push('/project/edit?id=' + id)}>EDIT</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"w-25 mr2\">\n\t\t\t\t\t<Button clear small btnType=\"danger\" onClick={remove}>REMOVE</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Card>\n\t</div>\n\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, Project> = (dispatch, props) => ({\n\tremove: () => {\n\t\tservice.remove(props.id)\n\t\tdispatch(remove(props.id))\n\t}\n})\n\nexport default withRouter(connect(null, mapDispatchToProps)(ProjectItem))\n","/* React imports */\nimport React, { JSXElementConstructor } from 'react'\nimport { connect } from 'react-redux';\n\n/* Components */\nimport ProjectItem from '../../../components/ProjectItem/ProjectItem';\n\n/* Typing */\nimport { Project } from '../../../entities/Project';\ntype Props = { projects: Project[] }\n\nexport const ProjectList: JSXElementConstructor<Props> = ({\n\tprojects,\n}) =>\n\t<div>\n\t\t{projects.map(project =>\n\t\t\t<ProjectItem key={project.id} {...project} />\n\t\t)}\n\t</div>\n\nconst mapStateToProps = (state: { projects: Project[] }) => ({\n\tprojects: state.projects,\n})\n\nexport default connect(mapStateToProps)(ProjectList)\n","import React from 'react'\n\nconst Footer = () =>\n\t<footer className=\"w-100 ph2 pv3 tc bg-near-black near-white\">\n\t\tMade by Christian\n\t</footer>\n\nexport default Footer\n","/* React imports */\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\n\n/* Components */\nimport Navigation from './components/Navigation/Navigation';\nimport Header from './components/Header/Header';\nimport ProjectForm from './routes/ProjectListing/Form/ProjectForm';\nimport ProjectList from './routes/ProjectListing/List/ProjectList';\nimport Footer from './components/Footer/Footer';\n\n/* Services */\nimport { add } from './store/actions';\nimport { list } from './services/ProjectService';\n\n/* Typing */\nimport { Project } from './entities/Project';\ntype MappedProps = { add: (project: Project[]) => void }\ntype Props = RouteComponentProps & MappedProps\n\nexport class App extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props)\n\t\tconst projects = list()\n\t\tprops.add(projects)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"flex flex-column justify-between min-vh-100\">\n\t\t\t\t<Header>\n\t\t\t\t\t<Navigation />\n\t\t\t\t</Header>\n\n\t\t\t\t<main className=\"flex-auto self-center pt1 pb4 ph3 mw6 w-100\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/project/create\" exact component={ProjectForm} />\n\t\t\t\t\t\t<Route path=\"/project/edit\" component={ProjectForm} />\n\t\t\t\t\t\t<Route path=\"/project/\" component={ProjectList} />\n\t\t\t\t\t\t<Redirect path=\"/\" to=\"/project\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</main>\n\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<MappedProps, {}> = dispatch => ({\n\tadd: projects => projects.forEach(project => dispatch(add(project)))\n})\n\nexport default withRouter(connect(null, mapDispatchToProps)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import { createStore, combineReducers } from 'redux'\nimport { projects } from './reducers/projects'\n\nexport default createStore(combineReducers({\n\tprojects,\n}))\n","import { Project } from \"../../entities/Project\";\nimport { ActionTypeEnum, ProjectAction } from \"../actions/projects\";\n\nexport function projects(state: Project[] = [], action: ProjectAction) {\n\tswitch (action.type) {\n\t\tcase ActionTypeEnum.PROJECT_ADD:\n\t\t\treturn [...state, action.project]\n\n\t\tcase ActionTypeEnum.PROJECT_EDIT:\n\t\t\tconst index = state.map(project => project.id).indexOf(action.project.id)\n\t\t\tif (index == -1) return state\n\n\t\t\tconst newState = [...state]\n\t\t\tnewState[index] = action.project\n\t\t\treturn newState\n\n\t\tcase ActionTypeEnum.PROJECT_REMOVE:\n\t\t\treturn state.filter(project => project.id !== action.projectId)\n\t}\n\n\treturn state\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nconst app =\n\t<Provider store={store}>\n\t\t<HashRouter>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</Provider>\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}