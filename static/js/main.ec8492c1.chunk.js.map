{"version":3,"sources":["components/UI/Input/Input.module.scss","components/UI/Card/Card.tsx","components/UI/Input/Input.tsx","helpers/Parsable.ts","helpers/TypeHelper.ts","helpers/decorators/class-transformer/Type.ts","entities/Project.ts","store/actions/projects.ts","services/ProjectService.ts","components/UI/Button/Button.tsx","routes/ProjectListing/Create/ProjectForm.tsx","components/ProjectItem/ProjectItem.tsx","routes/ProjectListing/List/ProjectList.tsx","components/Navigation/Navigation.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","App.tsx","serviceWorker.ts","store/store.ts","store/reducers/projects.ts","index.tsx"],"names":["module","exports","TextArea","Card","_ref","children","react_default","a","createElement","className","Input","input","_ref$className","label","type","props","Object","objectWithoutProperties","inputStyle","assign","styles","Parsable","classCallCheck","this","createClass","key","value","obj","plainToClass","TypeHelper","item","padrao","arguments","length","undefined","object","semAcento","ret","toString","replace","_Date","Date","_x","apply","trim","d","moment","toDate","isNaN","getFullYear","parseFloat","res","JSON","parse","e","Array","isArray","_len","args","_key","reduce","n","itemNumber","split","letter","charCodeAt","parseInt","Type","typeFunction","Original","target","Reflect","getMetadata","Number","Transform","data","number","String","string","Boolean","boolean","array","ActionTypeEnum","Project","_dec","_dec2","_dec3","_dec4","_dec5","_class","_Parsable","_getPrototypeOf2","_this","possibleConstructorReturn","getPrototypeOf","call","concat","initializerDefineProperty","_descriptor","assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","_descriptor5","inherits","applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","now","add","project","PROJECT_ADD","STORAGE_KEY","list","items","localStorage","getItem","Button","btnType","small","clear","buttonClass","push","join","ProjectForm","state","handleInputChange","event","setState","objectSpread","defineProperty","name","handleSubmit","preventDefault","save","modified","history","_this2","location","search","query","URLSearchParams","id","get","find","unsubscribe","listen","UI_Card_Card","onSubmit","UI_Input_Input","onChange","title","description","UI_Button_Button","Component","withRouter","connect","dispatch","isNew","projects","index","findIndex","json","stringify","setItem","saved","PROJECT_EDIT","edit","remove","projectId","splice","service","PROJECT_REMOVE","onClick","map","components_ProjectItem_ProjectItem","linkClass","NavLink","activeClassName","exact","to","Header","Footer","App","components_Header_Header","components_Navigation_Navigation","Switch","Route","path","component","ProjectList","Redirect","components_Footer_Footer","forEach","isLocalhost","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createStore","combineReducers","action","toConsumableArray","indexOf","newState","filter","app","es","store","HashRouter","basename","src_App","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ec8492c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TextArea\":\"Input_TextArea__3yPmy\"};","import React, { JSXElementConstructor, Props } from 'react'\n\nconst Card: JSXElementConstructor<Props<any>> = ({\n\tchildren,\n}) =>\n\t<div className=\"pa3 br2 shadow-4\">\n\t\t{children}\n\t</div>\n\nexport default Card\n","import React, { JSXElementConstructor, HTMLProps } from 'react'\n\nimport styles from './Input.module.scss'\n\nconst Input: JSXElementConstructor<Props> = ({\n\tclassName = '',\n\tlabel,\n\ttype,\n\t...props\n}) => {\n\tconst inputStyle = 'db w-100 br2 pa3 ba b--silver ' + className\n\tlet input\n\n\tswitch (type) {\n\t\tcase 'textarea':\n\t\t\tinput = <textarea className={inputStyle + ' ' + styles.TextArea} {...props}></textarea>\n\t\t\tbreak\n\t\tdefault:\n\t\t\tinput = <input className={inputStyle} type={type} {...props} />\n\t}\n\n\treturn (\n\t\t<label className=\"db mb4\">\n\t\t\t<p className=\"b mb3\">{label}</p>\n\t\t\t{input}\n\t\t</label>\n\t)\n}\n\ntype Props = HTMLProps<HTMLInputElement> & HTMLProps<HTMLTextAreaElement> & {\n\ttype: string\n\tlabel: string\n}\n\nexport default Input\n","import 'reflect-metadata';\nimport { plainToClass } from \"class-transformer\";\n\nexport abstract class Parsable {\n\tstatic parse<T>(this: Constructor<T>, obj?: ObjectKeys<T>): T;\n\tstatic parse<T>(this: Constructor<T>, obj?: ObjectKeys<T>[]): T[];\n\tstatic parse<T>(this: Constructor<T>, obj?: ObjectKeys<T> | ObjectKeys<T>[]): (T | T[]) {\n\t\treturn plainToClass(this, obj || {}) as (T | T[])\n\t}\n}\n\ntype ObjectKeys<T> = {\n\t[P in keyof T]?: T[P]\n}\n\ntype Constructor<T> = new () => T\n","import moment from 'moment'\n\nexport class TypeHelper {\n\n\tstatic object(item: any, padrao: any = {}): any {\n\t\treturn typeof item == \"object\" ? item : padrao\n\t}\n\n\tstatic any(item: any, padrao: any = {}): any {\n\t\treturn TypeHelper.object(item, padrao)\n\t}\n\n\tstatic string(item: any, padrao: string = '', semAcento = false): string {\n\t\tlet ret = (item || padrao).toString()\n\t\tif (semAcento) {\n\t\t\tret = ret.replace(/[àáâãä]/g, 'a')\n\t\t\t\t.replace(/[éèêë]/g, 'e')\n\t\t\t\t.replace(/[íìîï]/g, 'i')\n\t\t\t\t.replace(/[õóòõö]/g, 'o')\n\t\t\t\t.replace(/[úùü]/g, 'u')\n\t\t\t\t.replace(/[ç]/g, 'c')\n\t\t\t\t.replace(/[ñ]/g, 'n')\n\t\t}\n\t\treturn ret\n\t}\n\n\tstatic Date(item: any, padrao: Date = new Date(0)): Date {\n\t\tif (typeof item == 'string') {\n\t\t\titem = item.length <= 11 ? item.trim() + ' 12:00:00' : item\n\t\t}\n\n\t\tconst d = moment(item).toDate()\n\t\treturn isNaN(d.getFullYear()) ? padrao : d\n\t}\n\n\tstatic number(item: any, padrao: number = 0): number {\n\t\treturn (parseFloat(item) || padrao)\n\t}\n\n\tstatic boolean(item: any, padrao: boolean = false): boolean {\n\t\tif (typeof item == 'boolean') return item\n\n\t\ttry {\n\t\t\tconst res = JSON.parse(item)\n\t\t\tif (typeof res == 'number') return res > 0\n\t\t\tif (typeof res != 'boolean') return padrao\n\t\t\treturn res\n\t\t} catch (e) {\n\t\t\treturn padrao\n\t\t}\n\t}\n\n\tstatic array(item: any, padrao: any = []): any[] {\n\t\treturn Array.isArray(item) ? item : padrao\n\t}\n\n\tstatic encode(...args: (number | string)[]): number {\n\t\treturn <number>args.reduce((n, item) => {\n\t\t\tconst itemNumber: number = typeof item == 'string' ?\n\t\t\t\titem.split('').reduce((n, letter) => n + letter.charCodeAt(0), 0) :\n\t\t\t\titem;\n\t\t\treturn parseInt(n.toString() + itemNumber.toString())\n\t\t}, '')\n\t}\n}\n","import { Type as Original, plainToClass, Transform, TypeHelpOptions } from \"class-transformer\";\nimport 'reflect-metadata'\nimport { TypeHelper } from \"../../TypeHelper\";\n\nexport function Type(typeFunction?: (type?: TypeHelpOptions | undefined) => Function) {\n\tif (typeFunction) return Original.apply(null, [typeFunction])\n\n\treturn function (target: any, key: string) {\n\t\tconst type = Reflect.getMetadata('design:type', target, key)\n\t\tswitch (type) {\n\t\t\tcase Number:\n\t\t\t\treturn Transform(data => TypeHelper.number(data))(target, key)\n\t\t\tcase String:\n\t\t\t\treturn Transform(data => TypeHelper.string(data))(target, key)\n\t\t\tcase Date:\n\t\t\t\treturn Transform(data => TypeHelper.Date(data))(target, key)\n\t\t\tcase Boolean:\n\t\t\t\treturn Transform(data => TypeHelper.boolean(data))(target, key)\n\t\t\tcase Array:\n\t\t\t\treturn Transform(data => TypeHelper.array(data))(target, key)\n\t\t\tdefault:\n\t\t\t\treturn Transform(data => plainToClass(type, data))(target, key)\n\t\t}\n\t}\n}\n","import { Parsable } from \"../helpers/Parsable\";\nimport { Type } from \"../helpers/decorators/class-transformer/Type\";\n\nexport class Project extends Parsable {\n\n\t@Type()\n\tid: number = Date.now()\n\n\t@Type()\n\ttitle: string = ''\n\n\t@Type()\n\tdescription: string = ''\n\n\t@Type()\n\tmodified: Date = new Date()\n\n\t@Type()\n\tcreated: Date = new Date()\n}\n","import { Project } from \"../../entities/Project\";\n\nexport function add(project: Project): ProjectAction {\n\treturn {\n\t\ttype: ActionTypeEnum.PROJECT_ADD,\n\t\tproject,\n\t}\n}\n\nexport function edit(project: Project): ProjectAction {\n\treturn {\n\t\ttype: ActionTypeEnum.PROJECT_EDIT,\n\t\tproject,\n\t}\n}\n\nexport function remove(projectId: Project['id']): ProjectAction {\n\treturn {\n\t\ttype: ActionTypeEnum.PROJECT_REMOVE,\n\t\tprojectId,\n\t}\n}\n\nexport type ProjectAction = {\n\ttype: ActionTypeEnum.PROJECT_ADD\n\tproject: Project\n} | {\n\ttype: ActionTypeEnum.PROJECT_EDIT\n\tproject: Project\n} | {\n\ttype: ActionTypeEnum.PROJECT_REMOVE\n\tprojectId: Project['id']\n}\n\nexport enum ActionTypeEnum {\n\tPROJECT_ADD = 'PROJECT_ADD',\n\tPROJECT_EDIT = 'PROJECT_EDIT',\n\tPROJECT_REMOVE = 'PROJECT_REMOVE',\n}\n","import { Project } from \"../entities/Project\";\n\nconst STORAGE_KEY = 'project_list'\n\nexport function list(): Project[] {\n\tconst items: any[] = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]')\n\treturn Project.parse(items)\n}\n\nexport function remove(projectId: Project['id']): void {\n\tconst projects = list()\n\tconst index = projects.findIndex(item => item.id === projectId)\n\tprojects.splice(index, 1)\n\tconst json = JSON.stringify(projects)\n\tlocalStorage.setItem(STORAGE_KEY, json)\n}\n\nexport function save(project: Project): {\n\tsaved: boolean\n\tisNew: boolean\n} {\n\tconst projects = list()\n\n\tconst index = projects.findIndex(item => item.id == project.id)\n\tif (index > -1) projects[index] = project\n\telse projects.push(project)\n\n\tconst json = JSON.stringify(projects)\n\tlocalStorage.setItem(STORAGE_KEY, json)\n\n\treturn {\n\t\tsaved: true,\n\t\tisNew: index == -1,\n\t}\n}\n","import React, { HTMLProps, JSXElementConstructor } from 'react'\n\ntype Props = HTMLProps<HTMLButtonElement> & {\n\tbtnType: 'success' | 'danger'\n\tsmall?: boolean\n\tclear?: boolean\n}\n\nconst Button: JSXElementConstructor<Props> = ({\n\tbtnType,\n\tsmall,\n\tclear,\n\tchildren,\n\tclassName,\n\t...props\n}) => {\n\tconst buttonClass = ['db w-100 ttu bn b tc pointer dim']\n\n\tif (className)\n\t\tbuttonClass.push(className)\n\n\tbuttonClass.push(small ? 'ph1 pv2 f6' : 'ph2 pv3 f5')\n\n\tswitch (btnType) {\n\t\tcase 'success':\n\t\t\tbuttonClass.push(clear ? 'bg-transparent green' : 'bg-green white')\n\t\t\tbreak\n\t\tcase 'danger':\n\t\t\tbuttonClass.push(clear ? 'bg-transparent red' : 'bg-red white')\n\t\t\tbreak\n\t}\n\n\treturn (\n\t\t<button className={buttonClass.join(' ')} {...props}>\n\t\t\t{children}\n\t\t</button>\n\t)\n}\n\nexport default Button\n","import React, { Component, ChangeEvent } from 'react'\nimport Card from '../../../components/UI/Card/Card';\nimport Input from '../../../components/UI/Input/Input';\nimport { Project } from '../../../entities/Project';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { add, edit } from '../../../store/actions';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { save, list } from '../../../services/ProjectService';\nimport Button from '../../../components/UI/Button/Button';\n\ntype MappedProps = { save: (project: Project) => void }\ntype Props = RouteComponentProps & MappedProps\n\nclass ProjectForm extends Component<Props> {\n\tstate = {\n\t\tproject: Project.parse()\n\t}\n\n\tcomponentWillMount() {\n\t\tif (!this.props.location.search) return\n\n\t\tconst query = new URLSearchParams(this.props.location.search)\n\t\tconst id = parseInt(query.get('id') || '')\n\t\tconst project = list().find(project => project.id === id)\n\n\t\tif (project)\n\t\t\tthis.setState({ project })\n\n\t\tconst unsubscribe = this.props.history.listen(() => {\n\t\t\tthis.setState({ project: Project.parse() })\n\t\t\tunsubscribe()\n\t\t})\n\t}\n\n\thandleInputChange = (event: ChangeEvent<HTMLInputElement & HTMLTextAreaElement>) => {\n\t\tthis.setState({\n\t\t\tproject: Project.parse({\n\t\t\t\t...this.state.project,\n\t\t\t\t[event.target.name]: event.target.value.trim(),\n\t\t\t})\n\t\t})\n\t}\n\n\thandleSubmit = (event: ChangeEvent<HTMLFormElement>) => {\n\t\tevent.preventDefault()\n\n\t\tthis.props.save(Project.parse({\n\t\t\t...this.state.project,\n\t\t\tmodified: new Date(),\n\t\t}))\n\t\tthis.props.history.push('/projects')\n\n\t\tthis.setState({\n\t\t\tproject: Project.parse()\n\t\t})\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Card>\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Input name=\"title\" label=\"Project Name\" type=\"text\" onChange={this.handleInputChange} value={this.state.project.title} />\n\t\t\t\t\t<Input name=\"description\" label=\"Project Description\" type=\"textarea\" onChange={this.handleInputChange} value={this.state.project.description} />\n\t\t\t\t\t<Button type=\"submit\" btnType=\"success\">\n\t\t\t\t\t\tCREATE\n\t\t\t\t\t</Button>\n\t\t\t\t</form>\n\t\t\t</Card>\n\t\t)\n\t}\n}\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<MappedProps, RouteComponentProps> = dispatch => ({\n\tsave: project => {\n\t\tconst { isNew } = save(project)\n\t\tif (isNew) dispatch(add(project))\n\t\telse dispatch(edit(project))\n\t}\n})\n\nexport default withRouter(connect(null, mapDispatchToProps)(ProjectForm))\n","import React, { JSXElementConstructor, HTMLProps } from 'react'\nimport Card from '../UI/Card/Card';\nimport { Project } from '../../entities/Project';\nimport Button from '../UI/Button/Button';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { remove } from '../../store/actions';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport * as service from '../../services/ProjectService'\n\ntype DispatchProps = { remove: () => void }\ntype Props = Project & RouteComponentProps & DispatchProps & {\n\tonClick?: HTMLProps<HTMLElement>['onClick']\n}\n\nconst ProjectItem: JSXElementConstructor<Props> = ({\n\tid,\n\ttitle,\n\tdescription,\n\tonClick,\n\tremove,\n\thistory,\n}) =>\n\t<div className=\"mb3\" onClick={onClick}>\n\t\t<Card>\n\t\t\t<p className=\"mb2 f5 b\">{title}</p>\n\t\t\t<p className=\"f6\">{description}</p>\n\n\t\t\t<div className=\"flex\">\n\t\t\t\t<div className=\"w-25 mr2\">\n\t\t\t\t\t<Button clear small btnType=\"success\" onClick={() => history.push('/project/edit?id=' + id)}>EDIT</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"w-25 mr2\">\n\t\t\t\t\t<Button clear small btnType=\"danger\" onClick={remove}>REMOVE</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Card>\n\t</div>\n\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<DispatchProps, Project> = (dispatch, props) => ({\n\tremove: () => {\n\t\tservice.remove(props.id)\n\t\tdispatch(remove(props.id))\n\t}\n})\n\nexport default withRouter(connect(null, mapDispatchToProps)(ProjectItem))\n","import React, { JSXElementConstructor } from 'react'\nimport ProjectItem from '../../../components/ProjectItem/ProjectItem';\nimport { connect } from 'react-redux';\nimport { Project } from '../../../entities/Project';\n\ntype Props = { projects: Project[] }\n\nconst ProjectList: JSXElementConstructor<Props> = ({\n\tprojects,\n}) =>\n\t<div>\n\t\t{projects.map(project =>\n\t\t\t<ProjectItem key={project.id} {...project} />\n\t\t)}\n\t</div>\n\nconst mapStateToProps = (state: { projects: Project[] }) => ({\n\tprojects: state.projects,\n})\n\nexport default connect(mapStateToProps)(ProjectList)\n","import React, { JSXElementConstructor } from 'react'\nimport { withRouter, RouteComponentProps, NavLink } from 'react-router-dom';\n\nconst linkClass = \"dib f5 ph2 mh2 no-underline blue\"\n\nconst Navigation: JSXElementConstructor<RouteComponentProps> = () =>\n\t<nav className=\"tc mb3\">\n\t\t<NavLink className={linkClass} activeClassName='b' exact to=\"/project\">\n\t\t\tList\n\t\t</NavLink>\n\t\t<NavLink className={linkClass} activeClassName='b' exact to=\"/project/create\">\n\t\t\tCreate\n\t\t</NavLink>\n\t</nav>\n\nexport default withRouter(Navigation)\n","import React, { JSXElementConstructor, Props } from 'react'\n\nconst Header: JSXElementConstructor<Props<any>> = ({\n\tchildren,\n}) =>\n\t<header>\n\t\t<h1 className=\"f1 lh-title tc\">Project List</h1>\n\t\t{children}\n\t</header>\n\nexport default Header\n","import React from 'react'\n\nconst Footer = () =>\n\t<footer className=\"w-100 ph2 pv3 tc bg-near-black near-white\">\n\t\tMade by Christian\n\t</footer>\n\nexport default Footer\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect, Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport ProjectForm from './routes/ProjectListing/Create/ProjectForm';\nimport ProjectList from './routes/ProjectListing/List/ProjectList';\nimport { connect, MapDispatchToPropsFunction } from 'react-redux';\nimport { Project } from './entities/Project';\nimport { add } from './store/actions';\nimport { list } from './services/ProjectService';\nimport Navigation from './components/Navigation/Navigation';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\n\ntype MappedProps = { add: (project: Project[]) => void }\ntype Props = RouteComponentProps & MappedProps\n\nclass App extends Component<Props> {\n\tconstructor(props: Props) {\n\t\tsuper(props)\n\t\tconst projects = list()\n\t\tprops.add(projects)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"flex flex-column justify-between min-vh-100\">\n\t\t\t\t<Header>\n\t\t\t\t\t<Navigation />\n\t\t\t\t</Header>\n\n\t\t\t\t<main className=\"flex-auto self-center pt1 pb4 ph3 mw6 w-100\">\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route path=\"/project/create\" exact component={ProjectForm} />\n\t\t\t\t\t\t<Route path=\"/project/edit\" component={ProjectForm} />\n\t\t\t\t\t\t<Route path=\"/project/\" component={ProjectList} />\n\t\t\t\t\t\t<Redirect path=\"/\" to=\"/project\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</main>\n\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst mapDispatchToProps: MapDispatchToPropsFunction<MappedProps, {}> = dispatch => ({\n\tadd: projects => projects.forEach(project => dispatch(add(project)))\n})\n\nexport default withRouter(connect(null, mapDispatchToProps)(App))\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t// [::1] is the IPv6 localhost address.\n\twindow.location.hostname === '[::1]' ||\n\t// 127.0.0.1/8 is considered localhost for IPv4.\n\twindow.location.hostname.match(\n\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t)\n);\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void;\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(\n\t\t\t(process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n\t\t\twindow.location.href\n\t\t);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t'worker. To learn more, visit http://bit.ly/CRA-PWA'\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl)\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null && contentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.'\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\tregistration.unregister();\n\t\t});\n\t}\n}\n","import { createStore, combineReducers } from 'redux'\nimport { projects } from './reducers/projects'\n\nexport default createStore(combineReducers({\n\tprojects,\n}))\n","import { Project } from \"../../entities/Project\";\nimport { ActionTypeEnum, ProjectAction } from \"../actions/projects\";\n\nexport function projects(state: Project[] = [], action: ProjectAction) {\n\tswitch (action.type) {\n\t\tcase ActionTypeEnum.PROJECT_ADD:\n\t\t\treturn [...state, action.project]\n\n\t\tcase ActionTypeEnum.PROJECT_EDIT:\n\t\t\tconst index = state.map(project => project.id).indexOf(action.project.id)\n\t\t\tif (index == -1) return state\n\n\t\t\tconst newState = [...state]\n\t\t\tnewState[index] = action.project\n\t\t\treturn newState\n\n\t\tcase ActionTypeEnum.PROJECT_REMOVE:\n\t\t\treturn state.filter(project => project.id !== action.projectId)\n\t}\n\n\treturn state\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nconst basename = process.env.NODE_ENV === 'production' ? '/project-list' : '/'\n\nconst app =\n\t<Provider store={store}>\n\t\t<HashRouter basename={basename}>\n\t\t\t<App />\n\t\t</HashRouter>\n\t</Provider>\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}